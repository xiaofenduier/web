package com.lj.demo.model;

import java.util.ArrayList;
import java.util.List;

public class PermissionExample extends Page{
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public PermissionExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andDirIsNull() {
			addCriterion("dir is null");
			return (Criteria) this;
		}

		public Criteria andDirIsNotNull() {
			addCriterion("dir is not null");
			return (Criteria) this;
		}

		public Criteria andDirEqualTo(String value) {
			addCriterion("dir =", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirNotEqualTo(String value) {
			addCriterion("dir <>", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirGreaterThan(String value) {
			addCriterion("dir >", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirGreaterThanOrEqualTo(String value) {
			addCriterion("dir >=", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirLessThan(String value) {
			addCriterion("dir <", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirLessThanOrEqualTo(String value) {
			addCriterion("dir <=", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirLike(String value) {
			addCriterion("dir like", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirNotLike(String value) {
			addCriterion("dir not like", value, "dir");
			return (Criteria) this;
		}

		public Criteria andDirIn(List<String> values) {
			addCriterion("dir in", values, "dir");
			return (Criteria) this;
		}

		public Criteria andDirNotIn(List<String> values) {
			addCriterion("dir not in", values, "dir");
			return (Criteria) this;
		}

		public Criteria andDirBetween(String value1, String value2) {
			addCriterion("dir between", value1, value2, "dir");
			return (Criteria) this;
		}

		public Criteria andDirNotBetween(String value1, String value2) {
			addCriterion("dir not between", value1, value2, "dir");
			return (Criteria) this;
		}

		public Criteria andPageIsNull() {
			addCriterion("page is null");
			return (Criteria) this;
		}

		public Criteria andPageIsNotNull() {
			addCriterion("page is not null");
			return (Criteria) this;
		}

		public Criteria andPageEqualTo(String value) {
			addCriterion("page =", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageNotEqualTo(String value) {
			addCriterion("page <>", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageGreaterThan(String value) {
			addCriterion("page >", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageGreaterThanOrEqualTo(String value) {
			addCriterion("page >=", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageLessThan(String value) {
			addCriterion("page <", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageLessThanOrEqualTo(String value) {
			addCriterion("page <=", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageLike(String value) {
			addCriterion("page like", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageNotLike(String value) {
			addCriterion("page not like", value, "page");
			return (Criteria) this;
		}

		public Criteria andPageIn(List<String> values) {
			addCriterion("page in", values, "page");
			return (Criteria) this;
		}

		public Criteria andPageNotIn(List<String> values) {
			addCriterion("page not in", values, "page");
			return (Criteria) this;
		}

		public Criteria andPageBetween(String value1, String value2) {
			addCriterion("page between", value1, value2, "page");
			return (Criteria) this;
		}

		public Criteria andPageNotBetween(String value1, String value2) {
			addCriterion("page not between", value1, value2, "page");
			return (Criteria) this;
		}

		public Criteria andOperateIsNull() {
			addCriterion("operate is null");
			return (Criteria) this;
		}

		public Criteria andOperateIsNotNull() {
			addCriterion("operate is not null");
			return (Criteria) this;
		}

		public Criteria andOperateEqualTo(String value) {
			addCriterion("operate =", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateNotEqualTo(String value) {
			addCriterion("operate <>", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateGreaterThan(String value) {
			addCriterion("operate >", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateGreaterThanOrEqualTo(String value) {
			addCriterion("operate >=", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateLessThan(String value) {
			addCriterion("operate <", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateLessThanOrEqualTo(String value) {
			addCriterion("operate <=", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateLike(String value) {
			addCriterion("operate like", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateNotLike(String value) {
			addCriterion("operate not like", value, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateIn(List<String> values) {
			addCriterion("operate in", values, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateNotIn(List<String> values) {
			addCriterion("operate not in", values, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateBetween(String value1, String value2) {
			addCriterion("operate between", value1, value2, "operate");
			return (Criteria) this;
		}

		public Criteria andOperateNotBetween(String value1, String value2) {
			addCriterion("operate not between", value1, value2, "operate");
			return (Criteria) this;
		}

		public Criteria andStateidIsNull() {
			addCriterion("stateid is null");
			return (Criteria) this;
		}

		public Criteria andStateidIsNotNull() {
			addCriterion("stateid is not null");
			return (Criteria) this;
		}

		public Criteria andStateidEqualTo(Integer value) {
			addCriterion("stateid =", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidNotEqualTo(Integer value) {
			addCriterion("stateid <>", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidGreaterThan(Integer value) {
			addCriterion("stateid >", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidGreaterThanOrEqualTo(Integer value) {
			addCriterion("stateid >=", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidLessThan(Integer value) {
			addCriterion("stateid <", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidLessThanOrEqualTo(Integer value) {
			addCriterion("stateid <=", value, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidIn(List<Integer> values) {
			addCriterion("stateid in", values, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidNotIn(List<Integer> values) {
			addCriterion("stateid not in", values, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidBetween(Integer value1, Integer value2) {
			addCriterion("stateid between", value1, value2, "stateid");
			return (Criteria) this;
		}

		public Criteria andStateidNotBetween(Integer value1, Integer value2) {
			addCriterion("stateid not between", value1, value2, "stateid");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table permission
	 * @mbg.generated  Thu Sep 21 17:19:28 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table permission
     *
     * @mbg.generated do_not_delete_during_merge Thu Sep 21 14:10:15 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}