<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd">  
	
	<aop:config proxy-target-class="true"></aop:config>
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">    
        <property name="globalSessionTimeout" value="18000000"/>    
        <property name="deleteInvalidSessions" value="true"/>    
        <property name="sessionDAO" ref="sessionDAO"/>    
        <property name="sessionIdCookieEnabled" value="true"/>    
        <property name="sessionIdCookie" ref="sessionIdCookie"/>    
        <property name="sessionValidationSchedulerEnabled" value="true"/>  
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
        <property name="cacheManager" ref="cacheManager"/>  
	</bean>
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">    
        <constructor-arg value="sid"/>  
        <property name="httpOnly" value="true"/>  
        <property name="maxAge" value="1800"/>   
	</bean> 
	<!-- 会话验证调度器 -->  
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>  
    </bean>      
    <!-- 会话DAO，sessionManager里面的session需要保存在会话Dao里，没有会话Dao，session是瞬时的，没法从 sessionManager里面拿到session -->    
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">    
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>    
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>  
    </bean>
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean> 
	<bean id="kickoutSessionControlFilter" class="com.lj.demo.dao.shiro.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="cacheManager"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="1"/>  
	    <property name="kickoutUrl" value="/login.html?kickout=1"/>  
	</bean>   
	<!-- 启用shrio授权注解拦截方式 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
      	<!-- 装配 securityManager -->  
	    <property name="securityManager" ref="securityManager"/>  
	    <!-- 配置登陆页面 -->  
	    <property name="loginUrl" value="/login.html"/>  
	    <!-- 登陆成功后的一面 -->  
	    <property name="successUrl" value="/index.html"/>  
	    <!-- 登陆失败后的一面 --> 
	    <property name="unauthorizedUrl" value="/fail.html"/>  
	    <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
	    <property name="filters">    
        	<map>    
            	<entry key="kickout" value-ref="kickoutSessionControlFilter"/>    
        	</map>    
     	</property>   
	    <property name="filterChainDefinitions">  
			<value>  
				<!-- anon无权限访问请求，此处是登录页面和登录请求 -->  
                /login.html=anon  
                /login/**=anon  
                /logout = logout
                /css/**=anon 
                /js/**=anon  
                /fonts/**=anon   
                /images/**=anon
                /user/add=roles[user]
                /** = kickout,authc
		    </value>  
	    </property>  
    </bean>  
    
    <!-- 缓存管理器 -->  
  	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">    
  		<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml" />    
  	</bean>  
	<!-- 配置进行授权和认证的 Realm -->  
	<bean id="myRealm" class="com.lj.demo.controller.shiro.MyRealm" />  
	   
	<!-- 配置 Shiro 的 SecurityManager Bean. -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	    <property name="realm" ref="myRealm"/>
	    <property name="cacheManager" ref="cacheManager"></property>  
	    <property name="sessionManager" ref="sessionManager"/>  
	</bean>  
    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
</beans>  